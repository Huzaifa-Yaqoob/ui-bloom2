{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "password-input",
  "type": "registry:ui",
  "title": "Password Input",
  "description": "A password input field with a toggle option to show or hide the password.",
  "registryDependencies": [
    "form"
  ],
  "files": [
    {
      "path": "src/registry/components/password-input/password-input.tsx",
      "content": "import * as React from 'react';\nimport { Eye, EyeClosed } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { useFormField } from '@/components/ui/form';\n\nfunction PasswordInput({\n  className,\n  disabled,\n  ...props\n}: Omit<React.ComponentProps<'input'>, 'type'>) {\n  const { error } = useFormField();\n  const [showPassword, setShowPassword] = React.useState(false);\n  return (\n    <div\n      aria-invalid={!!error}\n      className={cn(\n        'selection:bg-primary selection:text-primary-foreground dark:bg-input/30 flex h-9 w-full min-w-0 rounded-md bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none md:text-sm',\n        'border-input aria-invalid:border-destructive flex items-center border',\n        'aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive',\n        'focus-within:border-ring focus-within:ring-ring/50 focus-within:ring-[3px]',\n        disabled ? 'pointer-events-none cursor-not-allowed opacity-50' : '',\n        className\n      )}\n    >\n      <input\n        type={showPassword ? 'text' : 'password'}\n        disabled={disabled}\n        className=\"flex-grow focus-visible:outline-0\"\n        {...props}\n      />\n      <button\n        type=\"button\"\n        onClick={() => {\n          setShowPassword((p) => !p);\n        }}\n        disabled={disabled}\n        className={cn(\n          'opacity-50',\n          disabled ? '' : 'cursor-pointer',\n          error && 'text-destructive'\n        )}\n      >\n        {showPassword ? (\n          <EyeClosed width={20} height={20} />\n        ) : (\n          <Eye width={20} height={20} />\n        )}\n      </button>\n    </div>\n  );\n}\n\nexport { PasswordInput };\n",
      "type": "registry:ui",
      "target": "components/ui-bloom/password-input.tsx"
    }
  ],
  "css": {
    "@layer base": {
      "input[type='password']::-ms-reveal": {
        "display": "none"
      },
      "input[type='password']::-ms-clear": {
        "display": "none"
      }
    }
  }
}